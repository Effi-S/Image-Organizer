#!/bin/bash
# This script automatically runs all python tests on the folder given in param1 
# And then creates summary excel file and pie chart.
# usage: /auto_run <dir of images to test> <number of images to test>
# Example usage for bulk: dirs=$(find archive -maxdepth 1 -mindepth 1 -type d) # archive is a dir with subdirs of >500 images in each)
#  	   for x in $dirs; do  ./auto_run $x 500; done

# util for rendering progress bar
render-val() {
 local val=${1}
 local size=${2}
	declare -i mid=60*$val/$size
	declare -i per=100*$val/$size
	for ((i=0; i<$mid; i++)); do printf "â–‡"; done
	for ((i=$mid; i<60 i++)); do printf "-"; done
	printf "| %s%%\r" $per
	
}

out(){ echo -e "\e[1m$@"; }

#-- Getting user info
imgfolderpath="$1"
numimgs="$2"

[[ ! -n "$numimgs" ]] && echo 'usage: ./auto_run <path to images> <number of images' && exit 1

#--Setting Variables
base=$(basename $imgfolderpath)  # getting bas dir name (ex: a from c/b/a) 
testfolder=$(pwd)/auto_test_"$base"_$(date +'%y-%m-%d__%s')

declare -A tests_dict  # keys are test name vals are test commands
tests_dict[brighten]='python brighten.py'
tests_dict[crop-2]='python crop.py --margin 0.02' 
tests_dict[crop-5]='python crop.py  --margin 0.05'
tests_dict[crop-7]='python crop.py  --margin 0.07'
tests_dict[crop-10]='python crop.py' 
tests_dict[resize]='python resize.py' 
tests_dict[rotate-3]='python rotate.py --angle-limit 3'
tests_dict[rotate-5]='python rotate.py --angle-limit 5'
tests_dict[rotate-10]='python rotate.py --angle-limit 10'
tests_dict[rotate-360]='python rotate.py'
tests_dict[False-Positives]='python nothing.py' # does nothing-- for false positives

out Test Folder: $base

out Getting images from: $imgfolderpath and testing: $numimgs for each test 

#-- Making directories
out Making Test Directories..
index=1
mkdir $testfolder
for x in ${!tests_dict[@]};do
	render-val $((index++)) ${#tests_dict[@]}
	mkdir $testfolder/$x
done
echo " " 

# -- Copy folder with images into test folder
out Copying images..
index=1
for x in ${!tests_dict[@]};do
	render-val $((index++)) ${#tests_dict[@]}
	cp -r $imgfolderpath $testfolder/$x
done 
echo " " 

#-- Select numimgs images in each test at random and run test on 
for t in ${!tests_dict[@]};do
	echo  Shuffling $numimgs into $testfolder/$t
	index=1  
	for x in $(shuf -e $(find $testfolder/$t -not -type d  -and -not -name "*.txt") -n $numimgs);do 
		render-val $((index++)) $numimgs
		${tests_dict[$t]} $x
	done
	echo " "	
done 

#--  Run test
out Running tests..
./test_cmd $testfolder

#-- summarizing 
# reltestfolder=$(basename $testfolder)
python summarize.py --root $testfolder --type exact 
python summarize.py --root $testfolder --type similar 
python draw_chart.py ${testfolder}/exact_summary.xlsx
python draw_chart.py ${testfolder}/similar_summary.xlsx

#-- cleaning up raw data
mkdir ${testfolder}/'raw_output_data'
mv ${testfolder}/*.txt ${testfolder}/'raw_output_data'




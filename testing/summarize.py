import os
import xlsxwriter
import argparse
import re


def main():

    parser = argparse.ArgumentParser('Summarizes test into excel sheet')
    parser.add_argument('--root', help='Relative path to folder generated by test.', required=True)
    parser.add_argument('--type', help='type of algo to test ( similar or exact)', default='exact')

    args = parser.parse_args()

    workbook = xlsxwriter.Workbook('{}/{}_{}'.format(args.root,args.type, 'summary.xlsx'))

    _, folders, _ = next(os.walk(args.root))  # getting folders
    for folder in folders:
        worksheet = workbook.add_worksheet(name=folder)

        test_images = []
        for _, _, files in os.walk('{}/{}'.format(args.root, folder)):
            for fd in files:
                if 'dup' in fd:
                    test_images.append(fd)

        worksheet.write(0, 0, 'Test Image')
        worksheet.write(0, 1, 'Found:')
        worksheet.write(0, 2, 'Params')

        output = open('{dir}/{base}_{type}_output.txt'.format
                      (dir=args.root, base=folder, type=args.type, ), 'r').read()
        groups = output.split('\n\n')

        found = 0
        for i, img in enumerate(test_images):
            worksheet.write(i + 1, 0, img)
            worksheet.write(i + 1, 2, re.findall(r'dup_(.*)_.+\.', img)[0])
            for group in groups:
                if img in group:
                    group = group.strip(img)  # removing the image from group
                    name = re.findall(r'.*_(.+)\.', img)[0]  # retrieving image name
                    if name in group:
                        worksheet.write(i + 1, 1, 'TRUE')
                        found += 1
                        break
            else:
                worksheet.write(i + 1, 1, 'FALSE')

        last_row = len(test_images) + 1  # index to last row.
        worksheet.write(last_row, 0, 'Number of Found:')
        worksheet.write(last_row, 1, '{}/{}'.format(found, last_row))

    workbook.close()


if __name__ == '__main__':
    main()